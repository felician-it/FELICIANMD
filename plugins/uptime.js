
const { cmd } = require('../command');
const { runtime } = require('../lib/functions');
const config = require('../config');
const pkg = require('../package.json');

cmd({
    pattern: "uptime",
    alias: ["runtime", "run"],
    desc: "Show bot uptime with stylish formats",
    category: "main",
    react: "‚è±Ô∏è",
    filename: __filename
},
async (conn, mek, m, { from, reply, args }) => {
    try {
        const uptime = runtime(process.uptime());
        const seconds = Math.floor(process.uptime());
        const startTime = new Date(Date.now() - seconds * 1000);
        const version = pkg.version || "1.0.0";

        const styles = [
`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ„Äé *UPTIME* „Äè‚îÄ‚îÄ‚îÄ‚ïÆ
‚îÇ ‚ï≠‚ïå‚îà‚îà‚îà‚îà‚îà‚îÑ‚îÑ‚îà‚ïå‚îà‚ä∑
‚îÇ ‚îÜ‚è±Ô∏è ${uptime}
‚îÇ ‚îÜüß≠ ${seconds} seconds
‚îÇ ‚îÜüöÄ Started: ${startTime.toLocaleString()}
‚îÇ ‚ï∞‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îÑ‚îà ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`,

`‚ï≠‚ïº‚ïê‚ßºùó®ùó£ùóßùóúùó†ùóò ùó¶ùóßùóîùóßùó®ùó¶‚ßΩ‚ïê‚ïæ‚ïÆ
‚îÉ‚ï≠‚ïº‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÅ‚îà‚ä∑
‚îÉ‚îÇ‚ô¢  Ä·¥ú…¥…¥…™…¥…¢: ${uptime}
‚îÉ‚îÇ‚ô¢ s·¥á·¥Ñ·¥è…¥·¥Ös: ${seconds}
‚îÉ‚îÇ‚ô¢ s…™…¥·¥Ñ·¥á: ${startTime.toLocaleDateString()}
‚îÉ‚ï∞‚ïº‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îà‚ä∑
‚ï∞‚ïº‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïæ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`,

`‚ï≠‚ïº‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïæ‚ïÆ
‚îÇ        *‚ü¨ UPTIME STATUS ‚ü≠*  
‚îÇ‚ï≠‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚ïç‚ä∑
‚îÇ‚îÇ ‚Ä¢ ·¥õ…™·¥ç·¥á: ${uptime}
‚îÇ‚îÇ ‚Ä¢ s·¥á·¥Ñ·¥è…¥·¥Ös: ${seconds}
‚îÇ‚îÇ ‚Ä¢ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö: ${startTime.toLocaleString()}
‚îÇ‚ï∞‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îà‚ä∑
‚ï∞‚ïº‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïæ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`,

`‚ï≠‚ïº‚îÖ‚ßº üÖ§üÖüüÖ£üÖòüÖúüÖî ‚ßΩ‚îâ‚ïæ‚ïÆ
‚îã ‚è≥ ${uptime}
‚îã üï∞Ô∏è ${startTime.toLocaleString()}
‚îã üî¢ ${seconds} s·¥á·¥Ñ·¥è…¥·¥Ös
‚ï∞‚ïº‚îâ‚îÖ‚îâ‚îÖ‚îâ‚îÖ‚îâ‚îÖ‚îâ‚îÖ‚îâ‚ïç‚îÖ‚ïæ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`,

`‚ï≠‚ïº‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïæ‚ïÆ
‚ïë  *ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ ùëºùë∑ùëªùë∞ùë¥ùë¨*
‚ïë   Ä·¥ú…¥·¥õ…™·¥ç·¥á: ${uptime}
‚ïë  s·¥á·¥Ñ·¥è…¥·¥Ös:: ${seconds}
‚ïë  s…™…¥·¥Ñ·¥á Ä·¥á ü è: ${startTime.toLocaleString()}
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïæ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ`,

`> ‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïæ‚ïÆ
> ‚îÉ‚è±Ô∏è *U·éÆTIM·èã ·é¶T·èòTU·é¶* ‚è±Ô∏è
> ‚îÉüü¢ ·¥è…¥ ü…™…¥·¥á “ì·¥è Ä: ${uptime}
> ‚îÉüî¢ s·¥á·¥Ñ·¥è…¥·¥Ös: ${seconds}
> ‚îÉüìÖ s…™…¥·¥Ñ·¥á: ${startTime.toLocaleString()}
> ‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïæ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`,

`‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ  ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ ùêîùêèùêìùêàùêåùêÑ  
‚îÉ‚ï≠‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îâ‚îâ‚îà‚ä∑
‚îÉ‚ïè‚ò£ ·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥: ${uptime}
‚îÉ‚ïè‚ò£ s·¥á·¥Ñ·¥è…¥·¥Ös: ${seconds}
‚îÉ‚ïè‚ò£ s·¥õ·¥Ä Ä·¥õ ·¥õ…™·¥ç·¥ás: ${startTime.toLocaleString()}
‚îÉ‚ïè‚ò£ s·¥õ·¥Ä ô…™ ü…™·¥õ è: 100%
‚îÉ‚ï∞‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îâ‚îÖ‚îÖ‚îÖ‚îà‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ*`
        ];

        let selectedStyle;
        if (args[0] && args[0].toLowerCase().startsWith("style")) {
            const index = parseInt(args[0].replace("style", "")) - 1;
            if (!isNaN(index) && styles[index]) {
                selectedStyle = styles[index];
            } else {
                return reply(`‚ùå Style not found.\n‚úÖ Use: style1 to style${styles.length}`);
            }
        } else {
            selectedStyle = styles[Math.floor(Math.random() * styles.length)];
        }

        await conn.sendMessage(from, {
            audio: { url: 'https://files.catbox.moe/11f9pe.mp3' },
            caption: selectedStyle,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363419079746471@newsletter',
                    newsletterName: 'ÍßÅ‡ºí‚òæFELICIANMD‚òΩ‡ºíÍßÇ',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Uptime Error:", e);
        reply(`‚ùå Error: ${e.message}`);
    }
});
